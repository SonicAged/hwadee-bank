<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hwadee.backend.mapper.SysPermissionMapper">

    <resultMap id="BaseResultMap" type="org.hwadee.backend.entity.SysPermission">
        <id column="permission_id" property="permissionId"/>
        <result column="permission_name" property="permissionName"/>
        <result column="permission_key" property="permissionKey"/>
        <result column="permission_type" property="permissionType"/>
        <result column="parent_id" property="parentId"/>
        <result column="path" property="path"/>
        <result column="component" property="component"/>
        <result column="icon" property="icon"/>
        <result column="sort_order" property="sortOrder"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        permission_id, permission_name, permission_key, permission_type, parent_id, 
        path, component, icon, sort_order, status, create_time, update_time
    </sql>

    <insert id="insert" parameterType="org.hwadee.backend.entity.SysPermission" useGeneratedKeys="true" keyProperty="permissionId">
        INSERT INTO sys_permission (
            permission_name, permission_key, permission_type, parent_id, 
            path, component, icon, sort_order, status
        ) VALUES (
            #{permissionName}, #{permissionKey}, #{permissionType}, #{parentId}, 
            #{path}, #{component}, #{icon}, #{sortOrder}, #{status}
        )
    </insert>

    <update id="update" parameterType="org.hwadee.backend.entity.SysPermission">
        UPDATE sys_permission
        <set>
            <if test="permissionName != null and permissionName != ''">permission_name = #{permissionName},</if>
            <if test="permissionKey != null and permissionKey != ''">permission_key = #{permissionKey},</if>
            <if test="permissionType != null">permission_type = #{permissionType},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="path != null">path = #{path},</if>
            <if test="component != null">component = #{component},</if>
            <if test="icon != null">icon = #{icon},</if>
            <if test="sortOrder != null">sort_order = #{sortOrder},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        WHERE permission_id = #{permissionId}
    </update>

    <delete id="deleteById">
        DELETE FROM sys_permission WHERE permission_id = #{permissionId}
    </delete>

    <delete id="deleteBatch">
        DELETE FROM sys_permission WHERE permission_id IN
        <foreach collection="permissionIds" item="permissionId" open="(" separator="," close=")">
            #{permissionId}
        </foreach>
    </delete>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM sys_permission WHERE permission_id = #{permissionId}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM sys_permission ORDER BY sort_order
    </select>

    <select id="selectMenuTree" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> 
        FROM sys_permission 
        WHERE permission_type IN (1, 2) AND status = 1
        ORDER BY sort_order
    </select>

    <select id="selectByCondition" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM sys_permission
        <where>
            <if test="permissionName != null and permissionName != ''">
                AND permission_name LIKE CONCAT('%', #{permissionName}, '%')
            </if>
            <if test="permissionType != null">
                AND permission_type = #{permissionType}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
        ORDER BY sort_order
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <select id="countByCondition" resultType="long">
        SELECT COUNT(1)
        FROM sys_permission
        <where>
            <if test="permissionName != null and permissionName != ''">
                AND permission_name LIKE CONCAT('%', #{permissionName}, '%')
            </if>
            <if test="permissionType != null">
                AND permission_type = #{permissionType}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <select id="checkPermissionNameExists" resultType="int">
        SELECT COUNT(1) FROM sys_permission 
        WHERE permission_name = #{permissionName}
        <if test="permissionId != null">
            AND permission_id != #{permissionId}
        </if>
    </select>

    <select id="checkPermissionKeyExists" resultType="int">
        SELECT COUNT(1) FROM sys_permission 
        WHERE permission_key = #{permissionKey}
        <if test="permissionId != null">
            AND permission_id != #{permissionId}
        </if>
    </select>

    <select id="selectPermissionsByRoleId" resultMap="BaseResultMap">
        SELECT p.permission_id, p.permission_name, p.permission_key, p.permission_type, p.parent_id, 
               p.path, p.component, p.icon, p.sort_order, p.status, p.create_time, p.update_time
        FROM sys_permission p
        INNER JOIN sys_role_permission rp ON p.permission_id = rp.permission_id
        WHERE rp.role_id = #{roleId} AND p.status = 1
        ORDER BY p.sort_order
    </select>

    <select id="selectPermissionsByUserId" resultMap="BaseResultMap">
        SELECT DISTINCT p.permission_id, p.permission_name, p.permission_key, p.permission_type, p.parent_id, 
                      p.path, p.component, p.icon, p.sort_order, p.status, p.create_time, p.update_time
        FROM sys_permission p
        INNER JOIN sys_role_permission rp ON p.permission_id = rp.permission_id
        INNER JOIN sys_user_role ur ON rp.role_id = ur.role_id
        WHERE ur.user_id = #{userId} AND p.status = 1
        ORDER BY p.sort_order
    </select>

    <select id="countChildrenByParentId" resultType="int">
        SELECT COUNT(1) FROM sys_permission WHERE parent_id = #{parentId}
    </select>

    <select id="selectByParentId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> 
        FROM sys_permission 
        WHERE parent_id = #{parentId}
        ORDER BY sort_order
    </select>
</mapper> 