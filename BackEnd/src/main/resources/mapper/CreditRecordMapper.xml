<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.hwadee.backend.mapper.CreditRecordMapper">

    <!-- 结果映射 -->
    <resultMap id="CreditRecordResultMap" type="org.hwadee.backend.entity.CreditRecord">
        <id property="recordId" column="record_id"/>
        <result property="userId" column="user_id"/>
        <result property="creditType" column="credit_type"/>
        <result property="creditSource" column="credit_source"/>
        <result property="creditAmount" column="credit_amount"/>
        <result property="operationType" column="operation_type"/>
        <result property="status" column="status"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <!-- 插入学分记录 -->
    <insert id="insert" parameterType="org.hwadee.backend.entity.CreditRecord" useGeneratedKeys="true" keyProperty="recordId">
        INSERT INTO credit_record (
            user_id, credit_type, credit_source, credit_amount, operation_type, status, remark, create_time
        ) VALUES (
            #{userId}, #{creditType}, #{creditSource}, #{creditAmount}, #{operationType}, #{status}, #{remark}, #{createTime}
        )
    </insert>

    <!-- 根据用户ID查询记录 -->
    <select id="selectByUserId" resultMap="CreditRecordResultMap">
        SELECT * FROM credit_record WHERE user_id = #{userId} ORDER BY create_time DESC
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <!-- 查询所有记录 -->
    <select id="selectAll" resultMap="CreditRecordResultMap">
        SELECT * FROM credit_record ORDER BY create_time DESC
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <!-- 根据类型查询记录 -->
    <select id="selectByType" resultMap="CreditRecordResultMap">
        SELECT * FROM credit_record WHERE credit_type = #{creditType} ORDER BY create_time DESC
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <!-- 根据记录ID查询学分记录 -->
    <select id="selectByRecordId" parameterType="long" resultMap="CreditRecordResultMap">
        SELECT * FROM credit_record WHERE record_id = #{recordId}
    </select>

    <!-- 更新学分记录状态 -->
    <update id="updateStatus">
        UPDATE credit_record SET status = #{status} WHERE record_id = #{recordId}
    </update>

    <!-- 根据用户ID统计记录数 -->
    <select id="countByUserId" resultType="long">
        SELECT COUNT(*) FROM credit_record WHERE user_id = #{userId}
    </select>

    <!-- 根据条件查询记录 -->
    <select id="selectByCondition" resultMap="CreditRecordResultMap">
        SELECT * FROM credit_record 
        <where>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="creditType != null and creditType != ''">
                AND credit_type = #{creditType}
            </if>
            <if test="operationType != null">
                AND operation_type = #{operationType}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
        ORDER BY create_time DESC
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <!-- 根据条件统计记录数 -->
    <select id="countByCondition" resultType="long">
        SELECT COUNT(*) FROM credit_record
        <where>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="creditType != null and creditType != ''">
                AND credit_type = #{creditType}
            </if>
            <if test="operationType != null">
                AND operation_type = #{operationType}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <!-- 统计所有记录数量 -->
    <select id="countAllRecords" resultType="long">
        SELECT COUNT(*) FROM credit_record
    </select>

    <!-- 根据用户ID和操作类型统计记录数量 -->
    <select id="countByUserIdAndOperationType" resultType="long">
        SELECT COUNT(*) FROM credit_record 
        WHERE user_id = #{userId} AND operation_type = #{operationType}
    </select>

    <!-- 删除记录 -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM credit_record WHERE record_id = #{recordId}
    </delete>
    
    <!-- 根据条件搜索记录 -->
    <select id="searchByCondition" resultMap="CreditRecordResultMap">
        SELECT * FROM credit_record 
        <where>
            <if test="creditType != null and creditType != ''">
                AND credit_type = #{creditType}
            </if>
            <if test="operationType != null">
                AND operation_type = #{operationType}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
        ORDER BY create_time DESC
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>
    
    <!-- 根据操作类型统计记录数量 -->
    <select id="countByOperationType" resultType="long">
        SELECT COUNT(*) FROM credit_record WHERE operation_type = #{operationType}
    </select>
    
    <!-- 获取特定用户的学分类型分布 -->
    <select id="getCreditTypeDistributionByUserId" resultType="java.util.Map">
        SELECT credit_type as 'key', COUNT(*) as 'value' 
        FROM credit_record 
        WHERE user_id = #{userId} AND status = 1 
        GROUP BY credit_type
    </select>
    
    <!-- 获取系统整体学分类型分布 -->
    <select id="getCreditTypeDistribution" resultType="java.util.Map">
        SELECT credit_type as 'key', COUNT(*) as 'value' 
        FROM credit_record 
        WHERE status = 1 
        GROUP BY credit_type
    </select>

</mapper> 